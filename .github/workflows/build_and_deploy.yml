# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Restore tools
        run: dotnet tool restore
        working-directory: ./CampaignManager.Frontend
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: ./CampaignManager.Frontend/package-lock.json
      - name: Install Node dependencies
        run: npm install
        working-directory: ./CampaignManager.Frontend
      - name: Build Backend
        run: dotnet build --no-restore
      - name: Build Frontend
        run: npm run build
        working-directory: ./CampaignManager.Frontend
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload frontend code to pages
          path: "./CampaignManager.Frontend/dist/"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
